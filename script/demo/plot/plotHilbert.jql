import jeql.std.function.HashFunction;

hilbertOrder = 4;
side = Val.toInt( Math.pow(2, hilbertOrder) );
count = side * side;

radius = 1;

t = select * from Generate.grid( 0, side-1, 0 ,side-1 );

t = select i, j, 
	//geom: Geom.buffer(Geom.createPoint(i, j), 0.4 * radius),
	geom: Geom.createBoxCenter(i, j, radius, radius),
	hilbert: HashFunction.hilbertIndex(4, i, j)
	from t;

t1 = select *,
	styleFill: Color.interpolate("ff0000", "00ff00", "0000ff", Val.toDouble(hilbert) / count )
	from t;
Mem t1;

t2 = select *,
	styleFill: Color.interpolate("ff0000", "00ff00", "0000ff", Val.toDouble(i * side + j) / count )
	from t;
Mem t2;

tpt = select i, j, hilbert, pt: Geom.createPoint(i, j) from t order by hilbert;
tline = select geomConnect(pt) from tpt;
Mem tline;

