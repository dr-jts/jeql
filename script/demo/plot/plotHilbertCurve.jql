import jeql.std.function.HashFunction;

PLOT_SIZE = 1000;
HILBERT_ORDER = 4;

side = Val.toInt( Math.pow(2, HILBERT_ORDER) );
count = side * side;


radius = 1;

t = select * from Generate.sequence( 0, count-2 );

t = select i, geom: Geom.buffer(hilbertEdge, 0.4)
	let 
		hilbertPt1 = HashFunction.hilbertPoint(HILBERT_ORDER, i),
		hilbertPt2 = HashFunction.hilbertPoint(HILBERT_ORDER, i+1),
		hilbertEdge = Geom.createLineFromPoints( hilbertPt1, hilbertPt2 )
	from t;

CLR_RUN_SIZE = count / 4;

tplot = select *,
	styleFill: clr, styleStroke: clrStroke, 
	styleStrokeWidth: widthStroke
	let
		clrIndex = Val.toDouble( i % CLR_RUN_SIZE ) / CLR_RUN_SIZE,

		clr = Color.toRGBfromHSV( 0.8 * Val.toDouble(i) / count, 1, 1),
		//clr = Color.toRGBfromHSV(clrIndex, 1, 1),
		//clr = Color.toRGBfromHSV(0.4 * clrIndex, 1, 1),
		//clr = Color.interpolate(#ff0000, #0000ff, #ff0000, clrIndex),

		//clrStroke = clr, widthStroke = 1
		clrStroke = #000000, widthStroke = 5
	from t;
Mem tplot;

Plot	data: tplot
	size: PLOT_SIZE
	extent: Geom.createBox(-1, -1, side, side)
	background: #000000
	file: "hilbert.png";


